#include <Wire.h>
#include <TinyGPS++.h>

#include <Adafruit_GFX.h>      
#include <Adafruit_ST7735.h>   

#include <Fonts/FreeMonoBold12pt7b.h>
#include <Fonts/FreeMono12pt7b.h>
#include <Fonts/FreeSans9pt7b.h>

#define TFT_CS     14
#define TFT_RST    33
#define TFT_DC     27
#define TFT_SCLK   13   
#define TFT_MOSI   11 

Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS,  TFT_DC, TFT_RST);


const uint16_t GRAY = 303131;
const uint16_t BLUE = 0x001f;
const uint16_t RED = 0xf800;
const uint16_t GREEN = 0x07e0;
const uint16_t CYAN = GREEN + BLUE;
const uint16_t MAGENTA = RED + BLUE;


#define RXD2 35
#define TXD2 34

HardwareSerial neogps(1);

TinyGPSPlus gps;

#define BUTTON_PIN 12 
bool buttonPressed = false;
bool buttonEnabled = true;

const unsigned char boot[] PROGMEM = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3d, 0xe0, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x78, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x78, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x3e, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x7e, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf9, 0xf7, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x3f, 0xc7, 0xc0, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x0f, 0xc1, 0xc0, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x0f, 0x83, 0xf0, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x0f, 0x87, 0xf0, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x3f, 0xcf, 0x7c, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xef, 0x3c, 0xfe, 0x1c, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc7, 0xf0, 0xfc, 0x0f, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x83, 0xf0, 0x78, 0x0f, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x01, 0xe0, 0xfc, 0x1e, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x87, 0xf1, 0xee, 0x3c, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc7, 0xff, 0xcf, 0xf8, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0xfe, 0x3f, 0x83, 0xf0, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xfe, 0x1f, 0x03, 0xe0, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x78, 0x1f, 0x03, 0xc0, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0xfc, 0x3f, 0x87, 0x80, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0xfe, 0x79, 0xcf, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x7b, 0xcf, 0xf1, 0xfe, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x3f, 0x87, 0xe0, 0xfc, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x3c, 0x1f, 0x03, 0xc0, 0x78, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x01, 0x9c, 0x78, 0x1f, 0x07, 0xe0, 0xf0, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x03, 0xfe, 0x7c, 0x3f, 0x8f, 0xf1, 0xe0, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0x1e, 0x3b, 0xde, 0x7b, 0xc0, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0x8e, 0xf1, 0xfc, 0x3f, 0x80, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xcf, 0xe0, 0xf8, 0x1f, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xe3, 0xc0, 0xf8, 0x1e, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xf1, 0xe1, 0xfc, 0x3c, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf9, 0xf3, 0xde, 0x78, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xfc, 0x7f, 0x8f, 0xf0, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xfe, 0x3f, 0x07, 0xe0, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0x1e, 0x03, 0xc0, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0x9f, 0x07, 0x80, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xc7, 0x8f, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xe3, 0xde, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xf1, 0xfc, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xf8, 0xf8, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xfe, 0x70, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xfe, 0x20, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x02, 0x3f, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x07, 0x9f, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x0f, 0x8f, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x1f, 0xe7, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x3d, 0xe3, 0xff, 0xff, 0xff, 0xf0, 0x5e, 0x80, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x78, 0xf1, 0xff, 0xff, 0xff, 0xc7, 0xff, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0xf0, 0x3c, 0xff, 0xff, 0xff, 0x1f, 0xfc, 0x70, 0x00, 0x00, 
0x00, 0x00, 0x03, 0xe0, 0x7c, 0x7f, 0xff, 0xfe, 0x7f, 0xf8, 0xf0, 0x00, 0x00, 
0x00, 0x00, 0x03, 0xf0, 0x7f, 0x3f, 0xff, 0xf8, 0xff, 0xf3, 0xe0, 0x00, 0x00, 
0x00, 0x00, 0x07, 0xf9, 0xef, 0x1f, 0xff, 0xf3, 0xff, 0xc7, 0xc0, 0x00, 0x00, 
0x00, 0x00, 0x0f, 0x3f, 0xc7, 0xcf, 0xff, 0xe7, 0xff, 0x8f, 0xc0, 0x00, 0x00, 
0x00, 0x00, 0x1e, 0x1f, 0x83, 0xc7, 0xff, 0xcf, 0xff, 0x3f, 0x80, 0x00, 0x00, 
0x00, 0x00, 0x7c, 0x0f, 0x03, 0xe3, 0xff, 0x9f, 0xfe, 0x3f, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x7c, 0x0f, 0x87, 0xf9, 0xff, 0xbf, 0xfc, 0xfe, 0x00, 0x00, 0x00, 
0x00, 0x00, 0xfe, 0x1f, 0xcf, 0x38, 0xff, 0x3f, 0xf8, 0xfe, 0x00, 0x00, 0x00, 
0x00, 0x01, 0xef, 0x39, 0xfe, 0x3e, 0x7e, 0x7f, 0xe3, 0xfc, 0x00, 0x00, 0x00, 
0x00, 0x07, 0xc7, 0xf8, 0xfc, 0x1e, 0x3e, 0xff, 0xe7, 0xf8, 0x00, 0x00, 0x00, 
0x00, 0x07, 0x83, 0xe0, 0x78, 0x0f, 0x1c, 0xff, 0x83, 0xf0, 0x00, 0x00, 0x00, 
0x00, 0x0f, 0x01, 0xe0, 0xfc, 0x1e, 0x0d, 0xff, 0x83, 0xe0, 0x00, 0x00, 0x00, 
0x00, 0x3f, 0x83, 0xf1, 0xfe, 0x3c, 0x01, 0xff, 0x01, 0xc0, 0x00, 0x00, 0x00, 
0x00, 0x3f, 0x8f, 0xfb, 0xcf, 0xf8, 0x01, 0xfe, 0x40, 0x80, 0x00, 0x00, 0x00, 
0x00, 0x79, 0xee, 0x3f, 0x87, 0xf0, 0x03, 0xfc, 0x70, 0x00, 0x00, 0x00, 0x00, 
0x01, 0xf0, 0xfc, 0x1f, 0x03, 0xe0, 0x03, 0xf9, 0xf8, 0x40, 0x00, 0x00, 0x00, 
0x01, 0xc0, 0x7c, 0x1f, 0x03, 0xc0, 0x03, 0xf1, 0xfc, 0xf0, 0x00, 0x00, 0x00, 
0x03, 0xe0, 0xfc, 0x3f, 0x87, 0x00, 0x07, 0xe7, 0xf9, 0xf8, 0x00, 0x00, 0x00, 
0x0f, 0xe0, 0xfe, 0x7b, 0xcf, 0x00, 0x03, 0xc7, 0xf0, 0xf8, 0x0e, 0x00, 0x00, 
0x0f, 0x7b, 0xcf, 0xf1, 0xfe, 0x00, 0x07, 0xcf, 0xe0, 0xfc, 0x1e, 0x10, 0x00, 
0x1c, 0x3f, 0x87, 0xe0, 0xfc, 0x00, 0x07, 0x9f, 0xc0, 0x3c, 0x0e, 0x38, 0x00, 
0x3c, 0x1f, 0x03, 0xc0, 0x78, 0x00, 0x07, 0x3f, 0x80, 0x38, 0x1e, 0x38, 0x00, 
0xf8, 0x1f, 0x07, 0xe0, 0xf0, 0x00, 0x02, 0x7f, 0x00, 0x00, 0x1e, 0x3c, 0xe0, 
0x38, 0x3f, 0x0f, 0xf1, 0xe0, 0x00, 0x06, 0x7e, 0x00, 0x00, 0x3c, 0x78, 0xf0, 
0x3e, 0x7b, 0xde, 0x77, 0xc0, 0x00, 0x04, 0xf8, 0x00, 0x00, 0x3c, 0x38, 0xf0, 
0x0e, 0xf3, 0xfc, 0x3f, 0x80, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf8, 0x78, 0xf0, 
0x0f, 0xe0, 0xf8, 0x1e, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x01, 0xf8, 0xf9, 0xe0, 
0x03, 0xc0, 0xf8, 0x1e, 0x00, 0x00, 0x01, 0x80, 0x00, 0x1f, 0xf0, 0xf0, 0xe0, 
0x01, 0xc1, 0xf8, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc1, 0xf1, 0xe0, 
0x01, 0xf3, 0xde, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x81, 0xe1, 0xe0, 
0x00, 0x77, 0x9f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x07, 0xc3, 0xc0, 
0x00, 0x3f, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc3, 0xc0, 
0x00, 0x3e, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x07, 0x80, 
0x00, 0x0f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x0f, 0x80, 
0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xfc, 0x0f, 0x00, 
0x00, 0x03, 0xbe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x3e, 0x00, 
0x00, 0x01, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x7c, 0x00, 
0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 
0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 
0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x5f, 0xe0, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xc0, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00
};

const unsigned char cloud[] PROGMEM = {
  B00000000,B00000111,B10000000,B00000000,
  B00000000,B00011111,B11100000,B00000000,
  B00000000,B01111111,B11111000,B00000000,
  B00000000,B11111111,B11111100,B00000000,
  B00000001,B11111100,B11111110,B00000000,
  B00000011,B11110000,B00111111,B00000000,
  B00000011,B11100000,B00011111,B00000000,
  B00000011,B11000000,B00001111,B00000000,
  B00000111,B11000000,B00001111,B10000000,
  B00000111,B10000000,B00000111,B10000000,
  B00000111,B10000000,B00000111,B10000000,
  B00000111,B10000000,B00001111,B10000000,
  B00000111,B11000000,B00001111,B00000000,
  B00000011,B11100000,B00011111,B00000000,
  B00000011,B11110000,B00111111,B00000000,
  B00000001,B11111100,B11111110,B00000000,
  B00000001,B11111111,B11111110,B00000000,
  B00000000,B11111111,B11111100,B00000000,
  B00000000,B11111111,B11111100,B00000000,
  B00000000,B01111111,B11111000,B00000000,
  B00000000,B01111111,B11110000,B00000000,
  B00000000,B00111111,B11110000,B00000000,
  B00000000,B00111111,B11100000,B00000000,
  B00000000,B00011111,B11000000,B00000000,
  B00000000,B00001111,B11000000,B00000000,
  B00000000,B00001111,B10000000,B00000000,
  B00000000,B00000111,B10000000,B00000000,
  B00000000,B00000111,B00000000,B00000000,
  B00000000,B00000010,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000
};

const unsigned char speed[] PROGMEM = {
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00001111,B11111100,B00000000,B00000000,B00000000,
  B00000000,B00000000,B01111111,B11111111,B10000000,B00000000,B00000000,
  B00000000,B00000001,B11111000,B11000111,B11100000,B00000000,B00000000,
  B00000000,B00000111,B10000000,B11000000,B01111000,B00000000,B00000000,
  B00000000,B00011111,B00000000,B11000000,B00111110,B00000000,B00000000,
  B00000000,B00111111,B00000000,B00000000,B00111111,B00000000,B00000000,
  B00000000,B01110011,B00000000,B00000000,B00110011,B10000000,B00000000,
  B00000000,B11100001,B00000000,B00000000,B00100001,B11000000,B00000000,
  B00000001,B11000000,B00000000,B00000000,B00000000,B11100000,B00000000,
  B00000011,B10000000,B00000000,B00000000,B00000000,B01110000,B00000000,
  B00000011,B00000000,B00000000,B00000000,B00000000,B00110000,B00000000,
  B00000111,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,
  B00000111,B10000000,B00000000,B00000000,B00000000,B01111000,B00000000,
  B00001111,B11000000,B00000000,B00000000,B00000000,B11111100,B00000000,
  B00001100,B00000000,B00000000,B00000000,B00000000,B00001100,B00000000,
  B00011000,B00000000,B00000000,B00000000,B00000100,B00000110,B00000000,
  B00011000,B00000000,B00000000,B00000000,B00111000,B00000110,B00000000,
  B00011000,B00000000,B00000000,B00000001,B11110000,B00000110,B00000000,
  B00111000,B00000000,B00000001,B11100111,B11100000,B00000111,B00000000,
  B00110000,B00000000,B00000111,B11111111,B11000000,B00000011,B00000000,
  B00110000,B00000000,B00000110,B00011111,B10000000,B00000011,B00000000,
  B00110000,B00000000,B00001100,B00001111,B00000000,B00000011,B00000000,
  B00111110,B00000000,B00001100,B00001100,B00000000,B00011111,B00000000,
  B00111110,B00000000,B00001100,B00001100,B00000000,B00011111,B00000000,
  B00110000,B00000000,B00001100,B00001100,B00000000,B00000011,B00000000,
  B00110000,B00000000,B00000110,B00011000,B00000000,B00000011,B00000000,
  B00110000,B00000000,B00000111,B11111000,B00000000,B00000011,B00000000,
  B00111000,B00000000,B00000001,B11100000,B00000000,B00000111,B00000000,
  B00011000,B00000000,B00000000,B00000000,B00000000,B00000110,B00000000,
  B00011000,B00000000,B00000000,B00000000,B00000000,B00000110,B00000000,
  B00011000,B00000000,B00000000,B00000000,B00000000,B00000110,B00000000,
  B00001100,B00000000,B00000000,B00000000,B00000000,B00001100,B00000000,
  B00001111,B11000000,B00000000,B00000000,B00000000,B11111100,B00000000,
  B00000111,B10000000,B00000000,B00000000,B00000000,B01111000,B00000000,
  B00000111,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,
  B00000011,B00000000,B00000000,B00000000,B00000000,B00110000,B00000000,
  B00000011,B00000011,B11111111,B11111111,B11110000,B00110000,B00000000,
  B00000000,B00000011,B11111111,B11111111,B11110000,B00000000,B00000000,
  B00000000,B00000011,B00000000,B00000000,B00110000,B00000000,B00000000,
  B00000000,B00000011,B00000000,B00000000,B00110000,B00000000,B00000000,
  B00000000,B00000011,B11111111,B11111111,B11110000,B00000000,B00000000,
  B00000000,B00000011,B11111111,B11111111,B11110000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000  
};

const unsigned char satellite[] PROGMEM = {
  B00000000,B00000000,B00000001,B10000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000011,B11000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000111,B11100000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00001110,B01110000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00011100,B00111000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00111000,B00011000,B11111000,B00000000,B00000000,
  B00000000,B00000000,B01110000,B00001001,B11111100,B00000000,B00000000,
  B00000000,B00000000,B11100000,B00000011,B10001110,B00000000,B00000000,
  B00000000,B00000001,B11000000,B00000111,B00000111,B00000000,B00000000,
  B00000000,B00000001,B11000000,B00001110,B00000011,B10000000,B00000000,
  B00000000,B00000000,B11100000,B00011100,B00000001,B11000000,B00000000,
  B00000000,B00000000,B01110000,B00111000,B00000000,B11100000,B00000000,
  B00000000,B00000000,B00111000,B01110000,B00000000,B01110000,B00000000,
  B00000000,B00000000,B00011100,B11100000,B00000000,B00111000,B00000000,
  B00000000,B00000000,B00001001,B11000000,B00000000,B00011000,B00000000,
  B00000000,B00000000,B00000011,B10000000,B00000000,B00011000,B00000000,
  B00000000,B00000000,B00000111,B00000000,B00000000,B00011000,B00000000,
  B00000000,B00000000,B00001110,B00000000,B00000000,B00111000,B00000000,
  B00000000,B00000000,B00001100,B00000000,B00000000,B01110000,B00000000,
  B00000000,B00000000,B00001110,B00000000,B00000000,B11100000,B00000000,
  B00000000,B00000000,B00011111,B00000000,B00000001,B11000000,B00000000,
  B00000000,B00000000,B01111111,B10000000,B00000011,B10011100,B00000000,
  B00000000,B00000000,B11110111,B11000000,B00000111,B00001110,B00000000,
  B00000000,B00000000,B01110000,B11100000,B00001110,B00000111,B00000000,
  B00000000,B00000000,B00111000,B01110000,B00011100,B00000011,B10000000,
  B00000000,B00000000,B00011100,B00111000,B00111000,B00000001,B11000000,
  B00000000,B00000000,B00011110,B00011100,B01110000,B00000001,B11000000,
  B00000000,B00000000,B00011111,B00011110,B11100000,B00000011,B10000000,
  B00000000,B00000000,B00011111,B10011111,B11001000,B00000111,B00000000,
  B00000000,B00000000,B00001111,B11001111,B10011100,B00001110,B00000000,
  B00000000,B00000000,B00000111,B11111100,B00001110,B00011100,B00000000,
  B00000000,B00000000,B00000000,B01111000,B00000111,B00111000,B00000000,
  B00000000,B00000000,B00000000,B00111000,B00000011,B11110000,B00000000,
  B00000000,B00000000,B00000000,B00010000,B00000001,B11100000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B11000000,B00000000,
  B11000000,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B11000001,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B11000000,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B11000000,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B11100000,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B01100000,B01111000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B01100000,B00111110,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00110000,B00000100,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00111000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00011100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00001110,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000011,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B11111110,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00111110,B00000000,B00000000,B00000000,B00000000,B00000000  
};

const unsigned char alt[] PROGMEM = {
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00011100,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00111100,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B01111110,B00000000,B00000000,B00000000,
  B00000000,B00000000,B01110000,B01111111,B00000000,B00000000,B00000000,
  B00000000,B00000000,B01111000,B11100111,B00000110,B00000000,B00000000,
  B00000000,B00000000,B11111101,B11100011,B10001111,B00000000,B00000000,
  B00000000,B00000000,B11111111,B11000011,B00011111,B10000000,B00000000,
  B00000000,B00000001,B11001111,B10000000,B00111111,B11000000,B00000000,
  B00000000,B00000011,B11000111,B00000000,B01111111,B11100000,B00000000,
  B00000000,B00000011,B10000011,B00000000,B11110111,B01110000,B00000000,
  B00000000,B00000111,B00000000,B00000000,B01100111,B00110000,B00000000,
  B00000000,B00000111,B00000000,B00000000,B00000111,B00000000,B00000000,
  B00000000,B00001110,B00000000,B00011000,B00000111,B00000000,B00000000,
  B00000000,B00011111,B00011110,B01111110,B00000111,B00000000,B00000000,
  B00000000,B00011111,B11111111,B11111111,B11100111,B00000000,B00000000,
  B00000000,B00111111,B11110111,B11100111,B11100111,B00000000,B00000000,
  B00000000,B00111000,B11100001,B10000001,B11000111,B00000000,B00000000,
  B00000000,B01110000,B00000000,B00000000,B00000111,B00000000,B00000000,
  B00000000,B11110000,B00000000,B00000000,B00000111,B00000000,B00000000,
  B00000000,B11100000,B00000000,B00000000,B00000111,B00000000,B00000000,
  B00000001,B11000000,B00000000,B00000000,B00000110,B00100000,B00000000,
  B00000001,B11000000,B00000000,B00000000,B00000000,B01100000,B00000000,
  B00000011,B10000000,B00000000,B00000000,B00000000,B01110000,B00000000,
  B00000111,B10000000,B00000000,B00000000,B00000000,B01110000,B00000000,
  B00000111,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,
  B00001110,B00000000,B00000000,B00000000,B00000000,B00011100,B00000000,
  B00001110,B00000000,B00000000,B00000000,B00000000,B00011100,B00000000,
  B00011111,B11111111,B11111111,B11111111,B11111111,B11111110,B00000000,
  B00011111,B11111111,B11111111,B11111111,B11111111,B11111110,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000  
};


void setup() {
  Serial.begin(115200);
  neogps.begin(9600, SERIAL_8N1, RXD2, TXD2);

  pinMode(BUTTON_PIN, INPUT_PULLUP);

      tft.initR(INITR_BLACKTAB);
      tft.setRotation(2);
      tft.fillScreen(ST7735_BLACK);
      
      tft.setTextWrap(false);
      tft.setCursor(10, 60);
      tft.setTextColor(ST7735_WHITE);
      tft.setTextSize(1);
      tft.println("GPSBox by");
      tft.setCursor(10, 70);
      tft.setTextSize(2);
      tft.println("CiferTech");
      tft.setCursor(45, 120);
      tft.setTextSize(1);
      tft.println("v1.0.0");
      delay(3000);
      tft.fillScreen(ST7735_BLACK);
}

void loop() {
   
  boolean newData = false;
  for (unsigned long start = millis(); millis() - start < 1000;)
  {
    while (neogps.available())
    {
      if (gps.encode(neogps.read()))
      {
        newData = true;
      }
    }
  }

  if (gps.location.isValid() == 1){
  
    tft.drawBitmap(10, 90, satellite, 50, 50,ST7735_WHITE); 
    tft.fillRect(80, 80, 50, 50, ST7735_BLACK);
    
    tft.setTextColor(ST7735_WHITE);   
    tft.setFont();    
    tft.setTextSize(1);
    tft.setCursor(5,60);
    tft.print("Detected Satellites:");
    tft.setFont(&FreeSans9pt7b);
    tft.setTextSize(2);
    tft.setCursor(80,120);
    tft.print(gps.satellites.value());

    delay(5000);
    tft.fillScreen(ST7735_BLACK);

    tft.drawBitmap(6, 5, cloud, 30, 30,ST7735_YELLOW);
    tft.fillRect(70, 5, 40, 70, ST7735_BLACK);
    
    tft.setTextColor(0x07FF);
    tft.setFont();
    tft.setTextSize(1);
    tft.setCursor(40,10);
    tft.print("Lat: ");
    tft.print(gps.location.lat(),4);   
    tft.setCursor(40,25);
    tft.print("Lng: ");
    tft.print(gps.location.lng(),4);
            
   //String gps_speed = String(gps.speed.kmph());
   
    tft.drawBitmap(6, 50, speed, 50, 50,ST7735_YELLOW);
    tft.fillRect(60, 75, 50, 40, ST7735_BLACK);
    
    tft.setTextColor(0x07FF);   
    tft.setFont();
    tft.setTextSize(0);
    tft.setCursor(60,65);
    tft.print("Speed(km/h)");
    tft.setFont(&FreeSans9pt7b);
    tft.setTextSize(1);
    tft.setCursor(60,90);
    tft.print(gps.speed.kmph());
    
   
    tft.drawBitmap(6, 100, alt, 50, 50,ST7735_YELLOW);
    tft.fillRect(60, 120, 50, 35, ST7735_BLACK);
   
    tft.setTextColor(0x07FF);   
    tft.setFont();
    tft.setTextSize(0);
    tft.setCursor(60,115);
    tft.print("Altitude");
    tft.setFont(&FreeSans9pt7b);
    tft.setTextSize(1);
    tft.setCursor(60,140);
    tft.print(gps.altitude.meters(), 0);
    
     
  }else{
    tft.drawBitmap(6, 5, boot, 100, 100,ST7735_WHITE); 
    tft.fillRect(60, 135, 10, 10, ST7735_BLACK);
    
    tft.setTextColor(ST7735_WHITE);   
    tft.setFont();
    tft.setTextSize(1);
    tft.setCursor(10,120);
    tft.print("Finding satellites");
    
    delay(5000);
    tft.fillScreen(ST7735_BLACK); 
  }



  if(newData == true)
  {   
    Serial.println("No Data");
    newData = false;
    Serial.println(gps.satellites.value());
  }
  if(newData == false)
  {
    Serial.println("No Data");
  }    
}
